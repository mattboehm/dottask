;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name dottask.core, :imports {EventType goog.events.EventType}, :requires {goog.dom goog.dom, classlist goog.dom.classlist, reagent reagent.core, tbx tubax.core, goog.dom.classlist goog.dom.classlist, dom goog.dom, tubax.core tubax.core, EventType goog.events.EventType, reagent.core reagent.core, clojure.set clojure.set, events goog.events, devtools devtools.core, string clojure.string, cset clojure.set, devtools.core devtools.core, clojure.string clojure.string, cljs.reader cljs.reader, goog.events goog.events, reader cljs.reader}, :uses nil, :defs {rerender! {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 228, :column 9, :end-line 228, :end-column 18, :arglists (quote ([updater]))}, :name dottask.core/rerender!, :variadic false, :file "src/dottask/core.cljs", :end-column 18, :method-params ([updater]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 228, :end-line 228, :max-fixed-arity 1, :fn-var true, :arglists (quote ([updater]))}, get-node {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 28, :column 9, :end-line 28, :end-column 17, :arglists (quote ([nodes id]))}, :name dottask.core/get-node, :variadic false, :file "src/dottask/core.cljs", :end-column 17, :method-params ([nodes id]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 28, :end-line 28, :max-fixed-arity 2, :fn-var true, :arglists (quote ([nodes id]))}, rename-prompt {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 256, :column 9, :end-line 256, :end-column 22, :arglists (quote ([state node-id]))}, :name dottask.core/rename-prompt, :variadic false, :file "src/dottask/core.cljs", :end-column 22, :method-params ([state node-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 256, :end-line 256, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state node-id]))}, add-node {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 303, :column 9, :end-line 303, :end-column 17, :arglists (quote ([state befores afters] [state befores afters text])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([state befores afters] [state befores afters text]), :arglists ([state befores afters] [state befores afters text]), :arglists-meta (nil nil)}}, :name dottask.core/add-node, :variadic false, :file "src/dottask/core.cljs", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([state befores afters] [state befores afters text]), :arglists ([state befores afters] [state befores afters text]), :arglists-meta (nil nil)}, :method-params ([state befores afters] [state befores afters text]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 303, :end-line 303, :max-fixed-arity 4, :fn-var true, :arglists ([state befores afters] [state befores afters text])}, on-page-load {:name dottask.core/on-page-load, :file "src/dottask/core.cljs", :line 576, :column 3, :end-line 576, :end-column 24, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 576, :column 12, :end-line 576, :end-column 24}}, update-state {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 207, :column 9, :end-line 207, :end-column 21, :arglists (quote ([state]))}, :name dottask.core/update-state, :variadic false, :file "src/dottask/core.cljs", :end-column 21, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 207, :end-line 207, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, statuses {:name dottask.core/statuses, :file "src/dottask/core.cljs", :line 100, :column 3, :end-line 100, :end-column 16, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 100, :column 8, :end-line 100, :end-column 16}}, dot->svg {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 198, :column 9, :end-line 198, :end-column 17, :arglists (quote ([dot]))}, :name dottask.core/dot->svg, :variadic false, :file "src/dottask/core.cljs", :end-column 17, :method-params ([dot]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 198, :end-line 198, :max-fixed-arity 1, :fn-var true, :arglists (quote ([dot]))}, select-node {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 270, :column 9, :end-line 270, :end-column 20, :arglists (quote ([state node-id]))}, :name dottask.core/select-node, :variadic false, :file "src/dottask/core.cljs", :end-column 20, :method-params ([state node-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 270, :end-line 270, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state node-id]))}, status-list {:name dottask.core/status-list, :file "src/dottask/core.cljs", :line 86, :column 3, :end-line 86, :end-column 19, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 86, :column 8, :end-line 86, :end-column 19}}, on-toggle-dep-click {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 370, :column 9, :end-line 370, :end-column 28, :arglists (quote ([state node-id]))}, :name dottask.core/on-toggle-dep-click, :variadic false, :file "src/dottask/core.cljs", :end-column 28, :method-params ([state node-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 370, :end-line 370, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state node-id]))}, get-toggle-link-button-text {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 431, :column 9, :end-line 431, :end-column 36, :arglists (quote ([state node-id]))}, :name dottask.core/get-toggle-link-button-text, :variadic false, :file "src/dottask/core.cljs", :end-column 36, :method-params ([state node-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 431, :end-line 431, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state node-id]))}, toggle-item {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 32, :column 9, :end-line 32, :end-column 20, :arglists (quote ([coll item]))}, :name dottask.core/toggle-item, :variadic false, :file "src/dottask/core.cljs", :end-column 20, :method-params ([coll item]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 32, :end-line 32, :max-fixed-arity 2, :fn-var true, :arglists (quote ([coll item]))}, change-node-status {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 266, :column 9, :end-line 266, :end-column 27, :arglists (quote ([state node-id status]))}, :name dottask.core/change-node-status, :variadic false, :file "src/dottask/core.cljs", :end-column 27, :method-params ([state node-id status]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 266, :end-line 266, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state node-id status]))}, add-or-split-node {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 355, :column 9, :end-line 355, :end-column 26, :arglists (quote ([state node-id position split?]))}, :name dottask.core/add-or-split-node, :variadic false, :file "src/dottask/core.cljs", :end-column 26, :method-params ([state node-id position split?]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 355, :end-line 355, :max-fixed-arity 4, :fn-var true, :arglists (quote ([state node-id position split?]))}, parse-points {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 158, :column 9, :end-line 158, :end-column 21, :arglists (quote ([pointstr]))}, :name dottask.core/parse-points, :variadic false, :file "src/dottask/core.cljs", :end-column 21, :method-params ([pointstr]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 158, :end-line 158, :max-fixed-arity 1, :fn-var true, :arglists (quote ([pointstr]))}, save-hash {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 103, :column 9, :end-line 103, :end-column 18, :arglists (quote ([state]))}, :name dottask.core/save-hash, :variadic false, :file "src/dottask/core.cljs", :end-column 18, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 103, :end-line 103, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, render! {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 570, :column 9, :end-line 570, :end-column 16, :arglists (quote ([]))}, :name dottask.core/render!, :variadic false, :file "src/dottask/core.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 570, :end-line 570, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, get-node-dim {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 64, :column 9, :end-line 64, :end-column 21, :arglists (quote ([node dim]))}, :name dottask.core/get-node-dim, :variadic false, :file "src/dottask/core.cljs", :end-column 21, :method-params ([node dim]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 64, :end-line 64, :max-fixed-arity 2, :fn-var true, :arglists (quote ([node dim]))}, resize-node {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 246, :column 9, :end-line 246, :end-column 20, :arglists (quote ([state node-id width height evt-type]))}, :name dottask.core/resize-node, :variadic false, :file "src/dottask/core.cljs", :end-column 20, :method-params ([state node-id width height evt-type]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 246, :end-line 246, :max-fixed-arity 5, :fn-var true, :arglists (quote ([state node-id width height evt-type]))}, delete-node {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 294, :column 9, :end-line 294, :end-column 20, :arglists (quote ([state id]))}, :name dottask.core/delete-node, :variadic false, :file "src/dottask/core.cljs", :end-column 20, :method-params ([state id]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 294, :end-line 294, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state id]))}, debug {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 16, :column 9, :end-line 16, :end-column 14, :arglists (quote ([result]))}, :name dottask.core/debug, :variadic false, :file "src/dottask/core.cljs", :end-column 14, :method-params ([result]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 16, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists (quote ([result]))}, ppi {:name dottask.core/ppi, :file "src/dottask/core.cljs", :line 14, :column 3, :end-line 14, :end-column 11, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 14, :column 8, :end-line 14, :end-column 11}}, show-help {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 42, :column 9, :end-line 42, :end-column 18, :arglists (quote ([]))}, :name dottask.core/show-help, :variadic false, :file "src/dottask/core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 42, :end-line 42, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, toggle-dep {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 364, :column 9, :end-line 364, :end-column 19, :arglists (quote ([state dep]))}, :name dottask.core/toggle-dep, :variadic false, :file "src/dottask/core.cljs", :end-column 19, :method-params ([state dep]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 364, :end-line 364, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state dep]))}, move-deps {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 324, :column 9, :end-line 324, :end-column 18, :arglists (quote ([deps old-node-id new-node-id dep-type] [deps old-node-id new-node-id move-befores move-afters])), :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([deps old-node-id new-node-id dep-type] [deps old-node-id new-node-id move-befores move-afters]), :arglists ([deps old-node-id new-node-id dep-type] [deps old-node-id new-node-id move-befores move-afters]), :arglists-meta (nil nil)}}, :name dottask.core/move-deps, :variadic false, :file "src/dottask/core.cljs", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([deps old-node-id new-node-id dep-type] [deps old-node-id new-node-id move-befores move-afters]), :arglists ([deps old-node-id new-node-id dep-type] [deps old-node-id new-node-id move-befores move-afters]), :arglists-meta (nil nil)}, :method-params ([deps old-node-id new-node-id dep-type] [deps old-node-id new-node-id move-befores move-afters]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 324, :end-line 324, :max-fixed-arity 5, :fn-var true, :arglists ([deps old-node-id new-node-id dep-type] [deps old-node-id new-node-id move-befores move-afters])}, treeify {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 112, :column 9, :end-line 112, :end-column 16, :arglists (quote ([edges] [edges vertex])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([edges] [edges vertex]), :arglists ([edges] [edges vertex]), :arglists-meta (nil nil)}}, :name dottask.core/treeify, :variadic false, :file "src/dottask/core.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([edges] [edges vertex]), :arglists ([edges] [edges vertex]), :arglists-meta (nil nil)}, :method-params ([edges] [edges vertex]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 112, :end-line 112, :max-fixed-arity 2, :fn-var true, :arglists ([edges] [edges vertex])}, el->nodeid {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 381, :column 9, :end-line 381, :end-column 19, :arglists (quote ([el]))}, :name dottask.core/el->nodeid, :variadic false, :file "src/dottask/core.cljs", :end-column 19, :method-params ([el]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 381, :end-line 381, :max-fixed-arity 1, :fn-var true, :arglists (quote ([el]))}, state-to-save {:name dottask.core/state-to-save, :file "src/dottask/core.cljs", :line 102, :column 3, :end-line 102, :end-column 21, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 102, :column 8, :end-line 102, :end-column 21}}, split-node {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 345, :column 9, :end-line 345, :end-column 19, :arglists (quote ([state node-id new-node-pos]))}, :name dottask.core/split-node, :variadic false, :file "src/dottask/core.cljs", :end-column 19, :method-params ([state node-id new-node-pos]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 345, :end-line 345, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state node-id new-node-pos]))}, link-mouseup {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 388, :column 9, :end-line 388, :end-column 21, :arglists (quote ([src-node-id src-y shift-key]))}, :name dottask.core/link-mouseup, :variadic false, :file "src/dottask/core.cljs", :end-column 21, :method-params ([src-node-id src-y shift-key]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 388, :end-line 388, :max-fixed-arity 3, :fn-var true, :arglists (quote ([src-node-id src-y shift-key]))}, prompt {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 20, :column 9, :end-line 20, :end-column 15, :arglists (quote ([message val]))}, :name dottask.core/prompt, :variadic false, :file "src/dottask/core.cljs", :end-column 15, :method-params ([message val]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 20, :end-line 20, :max-fixed-arity 2, :fn-var true, :arglists (quote ([message val]))}, app-state {:name dottask.core/app-state, :file "src/dottask/core.cljs", :line 71, :column 3, :end-line 71, :end-column 21, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 71, :column 12, :end-line 71, :end-column 21}}, toggle-dep-clear {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 367, :column 9, :end-line 367, :end-column 25, :arglists (quote ([state dep]))}, :name dottask.core/toggle-dep-clear, :variadic false, :file "src/dottask/core.cljs", :end-column 25, :method-params ([state dep]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 367, :end-line 367, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state dep]))}, select-next-node {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 273, :column 9, :end-line 273, :end-column 25, :arglists (quote ([state] [state direction])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([state] [state direction]), :arglists ([state] [state direction]), :arglists-meta (nil nil)}}, :name dottask.core/select-next-node, :variadic false, :file "src/dottask/core.cljs", :end-column 25, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([state] [state direction]), :arglists ([state] [state direction]), :arglists-meta (nil nil)}, :method-params ([state] [state direction]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 273, :end-line 273, :max-fixed-arity 2, :fn-var true, :arglists ([state] [state direction])}, load-hash {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 106, :column 9, :end-line 106, :end-column 18, :arglists (quote ([state]))}, :name dottask.core/load-hash, :variadic false, :file "src/dottask/core.cljs", :end-column 18, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 106, :end-line 106, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, rename-node {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 243, :column 9, :end-line 243, :end-column 20, :arglists (quote ([state node-id text]))}, :name dottask.core/rename-node, :variadic false, :file "src/dottask/core.cljs", :end-column 20, :method-params ([state node-id text]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 243, :end-line 243, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state node-id text]))}, extent {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 23, :column 9, :end-line 23, :end-column 15, :arglists (quote ([numbers]))}, :name dottask.core/extent, :variadic false, :file "src/dottask/core.cljs", :end-column 15, :method-params ([numbers]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 23, :end-line 23, :max-fixed-arity 1, :fn-var true, :arglists (quote ([numbers]))}, resize-mouse {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 401, :column 9, :end-line 401, :end-column 21, :arglists (quote ([target evt-type move-key]))}, :name dottask.core/resize-mouse, :variadic false, :file "src/dottask/core.cljs", :end-column 21, :method-params ([target evt-type move-key]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 401, :end-line 401, :max-fixed-arity 3, :fn-var true, :arglists (quote ([target evt-type move-key]))}, graph {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 441, :column 9, :end-line 441, :end-column 14, :arglists (quote ([state]))}, :name dottask.core/graph, :variadic false, :file "src/dottask/core.cljs", :end-column 14, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 441, :end-line 441, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, get-nodes {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 169, :column 9, :end-line 169, :end-column 18, :arglists (quote ([cljdot]))}, :name dottask.core/get-nodes, :variadic false, :file "src/dottask/core.cljs", :end-column 18, :method-params ([cljdot]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 169, :end-line 169, :max-fixed-arity 1, :fn-var true, :arglists (quote ([cljdot]))}, update-node {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 235, :column 9, :end-line 235, :end-column 20, :arglists (quote ([state node-id func]))}, :name dottask.core/update-node, :variadic false, :file "src/dottask/core.cljs", :end-column 20, :method-params ([state node-id func]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 235, :end-line 235, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state node-id func]))}, to-dot {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 139, :column 9, :end-line 139, :end-column 15, :arglists (quote ([nodes deps tags]))}, :name dottask.core/to-dot, :variadic false, :file "src/dottask/core.cljs", :end-column 15, :method-params ([nodes deps tags]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 139, :end-line 139, :max-fixed-arity 3, :fn-var true, :arglists (quote ([nodes deps tags]))}, node-mousedown {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 420, :column 9, :end-line 420, :end-column 23, :arglists (quote ([e]))}, :name dottask.core/node-mousedown, :variadic false, :file "src/dottask/core.cljs", :end-column 23, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 420, :end-line 420, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, render-tag-tree {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 131, :column 9, :end-line 131, :end-column 24, :arglists (quote ([tree]))}, :name dottask.core/render-tag-tree, :variadic false, :file "src/dottask/core.cljs", :end-column 24, :method-params ([tree]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 131, :end-line 131, :max-fixed-arity 1, :fn-var true, :arglists (quote ([tree]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:y :mouseup :tags :min :children :on-key-press :gdata :border-right :done :key :bottom :else :moving-width :button :top :selected-node-id :content :value :width :cursor :points :node :on-mouse-down :on-click :title :style :div :option :mousemove :after :nodes :status :max :label :id :class :id-counter :svg :todo :right :moving-height :position :both :x :__html :blocked :dot :sanity-hints :toggle-link-node-id :on-change :progress :data-nodeid :attributes :before :dangerouslySetInnerHTML :height :border-bottom :deps :select :left :text :span}, :order [:min :max :id :moving-width :width :moving-height :height :id-counter :tags :nodes :selected-node-id :toggle-link-node-id :deps :text :label :todo :progress :done :blocked :node :children :else :x :y :points :content :attributes :class :dot :svg :gdata :mousemove :mouseup :status :before :both :after :div :on-key-press :button :on-click :key :data-nodeid :on-mouse-down :style :left :top :title :span :select :value :on-change :option :position :right :bottom :cursor :border-bottom :border-right :dangerouslySetInnerHTML :__html :sanity-hints]}, :doc nil}