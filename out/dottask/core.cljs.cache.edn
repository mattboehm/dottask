;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name dottask.core, :imports {EventType goog.events.EventType}, :requires {goog.dom goog.dom, classlist goog.dom.classlist, reagent reagent.core, tbx tubax.core, goog.dom.classlist goog.dom.classlist, dom goog.dom, tubax.core tubax.core, EventType goog.events.EventType, reagent.core reagent.core, clojure.set clojure.set, events goog.events, devtools devtools.core, string clojure.string, cset clojure.set, devtools.core devtools.core, clojure.string clojure.string, cljs.reader cljs.reader, goog.events goog.events, reader cljs.reader}, :uses nil, :defs {rerender! {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 225, :column 9, :end-line 225, :end-column 18, :arglists (quote ([updater]))}, :name dottask.core/rerender!, :variadic false, :file "src/dottask/core.cljs", :end-column 18, :method-params ([updater]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 225, :end-line 225, :max-fixed-arity 1, :fn-var true, :arglists (quote ([updater]))}, get-node {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 28, :column 9, :end-line 28, :end-column 17, :arglists (quote ([nodes id]))}, :name dottask.core/get-node, :variadic false, :file "src/dottask/core.cljs", :end-column 17, :method-params ([nodes id]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 28, :end-line 28, :max-fixed-arity 2, :fn-var true, :arglists (quote ([nodes id]))}, rename-prompt {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 253, :column 9, :end-line 253, :end-column 22, :arglists (quote ([state node-id]))}, :name dottask.core/rename-prompt, :variadic false, :file "src/dottask/core.cljs", :end-column 22, :method-params ([state node-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 253, :end-line 253, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state node-id]))}, add-node {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 300, :column 9, :end-line 300, :end-column 17, :arglists (quote ([state befores afters] [state befores afters text])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([state befores afters] [state befores afters text]), :arglists ([state befores afters] [state befores afters text]), :arglists-meta (nil nil)}}, :name dottask.core/add-node, :variadic false, :file "src/dottask/core.cljs", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([state befores afters] [state befores afters text]), :arglists ([state befores afters] [state befores afters text]), :arglists-meta (nil nil)}, :method-params ([state befores afters] [state befores afters text]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 300, :end-line 300, :max-fixed-arity 4, :fn-var true, :arglists ([state befores afters] [state befores afters text])}, on-page-load {:name dottask.core/on-page-load, :file "src/dottask/core.cljs", :line 573, :column 3, :end-line 573, :end-column 24, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 573, :column 12, :end-line 573, :end-column 24}}, update-state {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 204, :column 9, :end-line 204, :end-column 21, :arglists (quote ([state]))}, :name dottask.core/update-state, :variadic false, :file "src/dottask/core.cljs", :end-column 21, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 204, :end-line 204, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, statuses {:name dottask.core/statuses, :file "src/dottask/core.cljs", :line 97, :column 3, :end-line 97, :end-column 16, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 97, :column 8, :end-line 97, :end-column 16}}, dot->svg {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 195, :column 9, :end-line 195, :end-column 17, :arglists (quote ([dot]))}, :name dottask.core/dot->svg, :variadic false, :file "src/dottask/core.cljs", :end-column 17, :method-params ([dot]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 195, :end-line 195, :max-fixed-arity 1, :fn-var true, :arglists (quote ([dot]))}, select-node {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 267, :column 9, :end-line 267, :end-column 20, :arglists (quote ([state node-id]))}, :name dottask.core/select-node, :variadic false, :file "src/dottask/core.cljs", :end-column 20, :method-params ([state node-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 267, :end-line 267, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state node-id]))}, status-list {:name dottask.core/status-list, :file "src/dottask/core.cljs", :line 83, :column 3, :end-line 83, :end-column 19, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 83, :column 8, :end-line 83, :end-column 19}}, on-toggle-dep-click {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 367, :column 9, :end-line 367, :end-column 28, :arglists (quote ([state node-id]))}, :name dottask.core/on-toggle-dep-click, :variadic false, :file "src/dottask/core.cljs", :end-column 28, :method-params ([state node-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 367, :end-line 367, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state node-id]))}, get-toggle-link-button-text {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 428, :column 9, :end-line 428, :end-column 36, :arglists (quote ([state node-id]))}, :name dottask.core/get-toggle-link-button-text, :variadic false, :file "src/dottask/core.cljs", :end-column 36, :method-params ([state node-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 428, :end-line 428, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state node-id]))}, toggle-item {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 32, :column 9, :end-line 32, :end-column 20, :arglists (quote ([coll item]))}, :name dottask.core/toggle-item, :variadic false, :file "src/dottask/core.cljs", :end-column 20, :method-params ([coll item]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 32, :end-line 32, :max-fixed-arity 2, :fn-var true, :arglists (quote ([coll item]))}, change-node-status {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 263, :column 9, :end-line 263, :end-column 27, :arglists (quote ([state node-id status]))}, :name dottask.core/change-node-status, :variadic false, :file "src/dottask/core.cljs", :end-column 27, :method-params ([state node-id status]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 263, :end-line 263, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state node-id status]))}, add-or-split-node {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 352, :column 9, :end-line 352, :end-column 26, :arglists (quote ([state node-id position split?]))}, :name dottask.core/add-or-split-node, :variadic false, :file "src/dottask/core.cljs", :end-column 26, :method-params ([state node-id position split?]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 352, :end-line 352, :max-fixed-arity 4, :fn-var true, :arglists (quote ([state node-id position split?]))}, parse-points {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 155, :column 9, :end-line 155, :end-column 21, :arglists (quote ([pointstr]))}, :name dottask.core/parse-points, :variadic false, :file "src/dottask/core.cljs", :end-column 21, :method-params ([pointstr]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 155, :end-line 155, :max-fixed-arity 1, :fn-var true, :arglists (quote ([pointstr]))}, save-hash {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 100, :column 9, :end-line 100, :end-column 18, :arglists (quote ([state]))}, :name dottask.core/save-hash, :variadic false, :file "src/dottask/core.cljs", :end-column 18, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 100, :end-line 100, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, render! {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 567, :column 9, :end-line 567, :end-column 16, :arglists (quote ([]))}, :name dottask.core/render!, :variadic false, :file "src/dottask/core.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 567, :end-line 567, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, get-node-dim {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 61, :column 9, :end-line 61, :end-column 21, :arglists (quote ([node dim]))}, :name dottask.core/get-node-dim, :variadic false, :file "src/dottask/core.cljs", :end-column 21, :method-params ([node dim]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 61, :end-line 61, :max-fixed-arity 2, :fn-var true, :arglists (quote ([node dim]))}, resize-node {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 243, :column 9, :end-line 243, :end-column 20, :arglists (quote ([state node-id width height evt-type]))}, :name dottask.core/resize-node, :variadic false, :file "src/dottask/core.cljs", :end-column 20, :method-params ([state node-id width height evt-type]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 243, :end-line 243, :max-fixed-arity 5, :fn-var true, :arglists (quote ([state node-id width height evt-type]))}, delete-node {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 291, :column 9, :end-line 291, :end-column 20, :arglists (quote ([state id]))}, :name dottask.core/delete-node, :variadic false, :file "src/dottask/core.cljs", :end-column 20, :method-params ([state id]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 291, :end-line 291, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state id]))}, debug {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 16, :column 9, :end-line 16, :end-column 14, :arglists (quote ([result]))}, :name dottask.core/debug, :variadic false, :file "src/dottask/core.cljs", :end-column 14, :method-params ([result]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 16, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists (quote ([result]))}, ppi {:name dottask.core/ppi, :file "src/dottask/core.cljs", :line 14, :column 3, :end-line 14, :end-column 11, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 14, :column 8, :end-line 14, :end-column 11}}, show-help {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 42, :column 9, :end-line 42, :end-column 18, :arglists (quote ([]))}, :name dottask.core/show-help, :variadic false, :file "src/dottask/core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 42, :end-line 42, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, toggle-dep {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 361, :column 9, :end-line 361, :end-column 19, :arglists (quote ([state dep]))}, :name dottask.core/toggle-dep, :variadic false, :file "src/dottask/core.cljs", :end-column 19, :method-params ([state dep]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 361, :end-line 361, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state dep]))}, move-deps {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 321, :column 9, :end-line 321, :end-column 18, :arglists (quote ([deps old-node-id new-node-id dep-type] [deps old-node-id new-node-id move-befores move-afters])), :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([deps old-node-id new-node-id dep-type] [deps old-node-id new-node-id move-befores move-afters]), :arglists ([deps old-node-id new-node-id dep-type] [deps old-node-id new-node-id move-befores move-afters]), :arglists-meta (nil nil)}}, :name dottask.core/move-deps, :variadic false, :file "src/dottask/core.cljs", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([deps old-node-id new-node-id dep-type] [deps old-node-id new-node-id move-befores move-afters]), :arglists ([deps old-node-id new-node-id dep-type] [deps old-node-id new-node-id move-befores move-afters]), :arglists-meta (nil nil)}, :method-params ([deps old-node-id new-node-id dep-type] [deps old-node-id new-node-id move-befores move-afters]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 321, :end-line 321, :max-fixed-arity 5, :fn-var true, :arglists ([deps old-node-id new-node-id dep-type] [deps old-node-id new-node-id move-befores move-afters])}, treeify {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 109, :column 9, :end-line 109, :end-column 16, :arglists (quote ([edges] [edges vertex])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([edges] [edges vertex]), :arglists ([edges] [edges vertex]), :arglists-meta (nil nil)}}, :name dottask.core/treeify, :variadic false, :file "src/dottask/core.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([edges] [edges vertex]), :arglists ([edges] [edges vertex]), :arglists-meta (nil nil)}, :method-params ([edges] [edges vertex]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 109, :end-line 109, :max-fixed-arity 2, :fn-var true, :arglists ([edges] [edges vertex])}, el->nodeid {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 378, :column 9, :end-line 378, :end-column 19, :arglists (quote ([el]))}, :name dottask.core/el->nodeid, :variadic false, :file "src/dottask/core.cljs", :end-column 19, :method-params ([el]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 378, :end-line 378, :max-fixed-arity 1, :fn-var true, :arglists (quote ([el]))}, state-to-save {:name dottask.core/state-to-save, :file "src/dottask/core.cljs", :line 99, :column 3, :end-line 99, :end-column 21, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 99, :column 8, :end-line 99, :end-column 21}}, split-node {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 342, :column 9, :end-line 342, :end-column 19, :arglists (quote ([state node-id new-node-pos]))}, :name dottask.core/split-node, :variadic false, :file "src/dottask/core.cljs", :end-column 19, :method-params ([state node-id new-node-pos]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 342, :end-line 342, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state node-id new-node-pos]))}, link-mouseup {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 385, :column 9, :end-line 385, :end-column 21, :arglists (quote ([src-node-id src-y shift-key]))}, :name dottask.core/link-mouseup, :variadic false, :file "src/dottask/core.cljs", :end-column 21, :method-params ([src-node-id src-y shift-key]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 385, :end-line 385, :max-fixed-arity 3, :fn-var true, :arglists (quote ([src-node-id src-y shift-key]))}, prompt {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 20, :column 9, :end-line 20, :end-column 15, :arglists (quote ([message val]))}, :name dottask.core/prompt, :variadic false, :file "src/dottask/core.cljs", :end-column 15, :method-params ([message val]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 20, :end-line 20, :max-fixed-arity 2, :fn-var true, :arglists (quote ([message val]))}, app-state {:name dottask.core/app-state, :file "src/dottask/core.cljs", :line 68, :column 3, :end-line 68, :end-column 21, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 68, :column 12, :end-line 68, :end-column 21}}, toggle-dep-clear {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 364, :column 9, :end-line 364, :end-column 25, :arglists (quote ([state dep]))}, :name dottask.core/toggle-dep-clear, :variadic false, :file "src/dottask/core.cljs", :end-column 25, :method-params ([state dep]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 364, :end-line 364, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state dep]))}, select-next-node {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 270, :column 9, :end-line 270, :end-column 25, :arglists (quote ([state] [state direction])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([state] [state direction]), :arglists ([state] [state direction]), :arglists-meta (nil nil)}}, :name dottask.core/select-next-node, :variadic false, :file "src/dottask/core.cljs", :end-column 25, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([state] [state direction]), :arglists ([state] [state direction]), :arglists-meta (nil nil)}, :method-params ([state] [state direction]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 270, :end-line 270, :max-fixed-arity 2, :fn-var true, :arglists ([state] [state direction])}, load-hash {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 103, :column 9, :end-line 103, :end-column 18, :arglists (quote ([state]))}, :name dottask.core/load-hash, :variadic false, :file "src/dottask/core.cljs", :end-column 18, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 103, :end-line 103, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, rename-node {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 240, :column 9, :end-line 240, :end-column 20, :arglists (quote ([state node-id text]))}, :name dottask.core/rename-node, :variadic false, :file "src/dottask/core.cljs", :end-column 20, :method-params ([state node-id text]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 240, :end-line 240, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state node-id text]))}, extent {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 23, :column 9, :end-line 23, :end-column 15, :arglists (quote ([numbers]))}, :name dottask.core/extent, :variadic false, :file "src/dottask/core.cljs", :end-column 15, :method-params ([numbers]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 23, :end-line 23, :max-fixed-arity 1, :fn-var true, :arglists (quote ([numbers]))}, resize-mouse {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 398, :column 9, :end-line 398, :end-column 21, :arglists (quote ([target evt-type move-key]))}, :name dottask.core/resize-mouse, :variadic false, :file "src/dottask/core.cljs", :end-column 21, :method-params ([target evt-type move-key]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 398, :end-line 398, :max-fixed-arity 3, :fn-var true, :arglists (quote ([target evt-type move-key]))}, graph {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 438, :column 9, :end-line 438, :end-column 14, :arglists (quote ([state]))}, :name dottask.core/graph, :variadic false, :file "src/dottask/core.cljs", :end-column 14, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 438, :end-line 438, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, get-nodes {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 166, :column 9, :end-line 166, :end-column 18, :arglists (quote ([cljdot]))}, :name dottask.core/get-nodes, :variadic false, :file "src/dottask/core.cljs", :end-column 18, :method-params ([cljdot]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 166, :end-line 166, :max-fixed-arity 1, :fn-var true, :arglists (quote ([cljdot]))}, update-node {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 232, :column 9, :end-line 232, :end-column 20, :arglists (quote ([state node-id func]))}, :name dottask.core/update-node, :variadic false, :file "src/dottask/core.cljs", :end-column 20, :method-params ([state node-id func]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 232, :end-line 232, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state node-id func]))}, to-dot {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 136, :column 9, :end-line 136, :end-column 15, :arglists (quote ([nodes deps tags]))}, :name dottask.core/to-dot, :variadic false, :file "src/dottask/core.cljs", :end-column 15, :method-params ([nodes deps tags]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 136, :end-line 136, :max-fixed-arity 3, :fn-var true, :arglists (quote ([nodes deps tags]))}, node-mousedown {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 417, :column 9, :end-line 417, :end-column 23, :arglists (quote ([e]))}, :name dottask.core/node-mousedown, :variadic false, :file "src/dottask/core.cljs", :end-column 23, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 417, :end-line 417, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, render-tag-tree {:protocol-inline nil, :meta {:file "/Users/a-mboehm/repos/dottask/src/dottask/core.cljs", :line 128, :column 9, :end-line 128, :end-column 24, :arglists (quote ([tree]))}, :name dottask.core/render-tag-tree, :variadic false, :file "src/dottask/core.cljs", :end-column 24, :method-params ([tree]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 128, :end-line 128, :max-fixed-arity 1, :fn-var true, :arglists (quote ([tree]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:y :mouseup :tags :min :children :on-key-press :gdata :border-right :done :key :bottom :else :moving-width :button :top :selected-node-id :content :value :width :cursor :points :node :on-mouse-down :on-click :title :style :div :option :mousemove :after :nodes :status :max :label :id :class :id-counter :svg :todo :right :moving-height :position :both :x :__html :blocked :dot :sanity-hints :toggle-link-node-id :on-change :progress :data-nodeid :attributes :before :dangerouslySetInnerHTML :height :border-bottom :deps :select :left :text :span}, :order [:min :max :id :moving-width :width :moving-height :height :id-counter :tags :nodes :selected-node-id :toggle-link-node-id :deps :text :label :todo :progress :done :blocked :node :children :else :x :y :points :content :attributes :class :dot :svg :gdata :mousemove :mouseup :status :before :both :after :div :on-key-press :button :on-click :key :data-nodeid :on-mouse-down :style :left :top :title :span :select :value :on-change :option :position :right :bottom :cursor :border-bottom :border-right :dangerouslySetInnerHTML :__html :sanity-hints]}, :doc nil}