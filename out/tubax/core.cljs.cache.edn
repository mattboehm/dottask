;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name tubax.core, :imports nil, :requires {ext.saxjs ext.saxjs}, :uses nil, :defs {new-document {:protocol-inline nil, :meta {:file "/Users/mattboehm/repos/learn-figwheel/out/tubax/core.cljs", :line 4, :column 8, :end-line 4, :end-column 20, :private true, :arglists (quote ([]))}, :private true, :name tubax.core/new-document, :variadic false, :file "out/tubax/core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, add-node-document {:protocol-inline nil, :meta {:file "/Users/mattboehm/repos/learn-figwheel/out/tubax/core.cljs", :line 7, :column 8, :end-line 7, :end-column 25, :private true, :arglists (quote ([node document]))}, :private true, :name tubax.core/add-node-document, :variadic false, :file "out/tubax/core.cljs", :end-column 25, :method-params ([node document]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 2, :fn-var true, :arglists (quote ([node document]))}, close-node-document {:protocol-inline nil, :meta {:file "/Users/mattboehm/repos/learn-figwheel/out/tubax/core.cljs", :line 14, :column 8, :end-line 14, :end-column 27, :private true, :arglists (quote ([node document]))}, :private true, :name tubax.core/close-node-document, :variadic false, :file "out/tubax/core.cljs", :end-column 27, :method-params ([node document]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 2, :fn-var true, :arglists (quote ([node document]))}, add-text {:protocol-inline nil, :meta {:file "/Users/mattboehm/repos/learn-figwheel/out/tubax/core.cljs", :line 24, :column 8, :end-line 24, :end-column 16, :private true, :arglists (quote ([text document]))}, :private true, :name tubax.core/add-text, :variadic false, :file "out/tubax/core.cljs", :end-column 16, :method-params ([text document]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 2, :fn-var true, :arglists (quote ([text document]))}, format-document {:protocol-inline nil, :meta {:file "/Users/mattboehm/repos/learn-figwheel/out/tubax/core.cljs", :line 33, :column 8, :end-line 33, :end-column 23, :private true, :arglists (quote ([document]))}, :private true, :name tubax.core/format-document, :variadic false, :file "out/tubax/core.cljs", :end-column 23, :method-params ([document]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([document]))}, xml->clj {:protocol-inline nil, :meta {:file "/Users/mattboehm/repos/learn-figwheel/out/tubax/core.cljs", :line 37, :column 7, :end-line 37, :end-column 15, :arglists (quote ([source] [source {:keys [strict trim normalize lowercase xmlns position strict-entities], :or {strict true, trim true, normalize false, lowercase true, position true, strict-entities false}}])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([source] [source {:keys [strict trim normalize lowercase xmlns position strict-entities], :or {strict true, trim true, normalize false, lowercase true, position true, strict-entities false}}]), :arglists ([source] [source {:keys [strict trim normalize lowercase xmlns position strict-entities], :or {strict true, trim true, normalize false, lowercase true, position true, strict-entities false}}]), :arglists-meta (nil nil)}}, :name tubax.core/xml->clj, :variadic false, :file "out/tubax/core.cljs", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([source] [source {:keys [strict trim normalize lowercase xmlns position strict-entities], :or {strict true, trim true, normalize false, lowercase true, position true, strict-entities false}}]), :arglists ([source] [source {:keys [strict trim normalize lowercase xmlns position strict-entities], :or {strict true, trim true, normalize false, lowercase true, position true, strict-entities false}}]), :arglists-meta (nil nil)}, :method-params ([source] [source {:keys [strict trim normalize lowercase xmlns position strict-entities], :or {strict true, trim true, normalize false, lowercase true, position true, strict-entities false}}]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 2, :fn-var true, :arglists ([source] [source {:keys [strict trim normalize lowercase xmlns position strict-entities], :or {strict true, trim true, normalize false, lowercase true, position true, strict-entities false}}])}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:strict :lowercase :content :xmlns :success :strict-entities :trim :position :error :tag :attributes :keywordize-keys :normalize}, :order [:keywordize-keys :tag :attributes :content :strict :trim :normalize :lowercase :xmlns :position :strict-entities :success :error]}, :doc nil}